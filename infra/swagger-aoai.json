{
  "swagger": "2.0",
  "info": {
    "title": "AOAI",
    "version": "1.0",
    "description": "Azure OpenAI APIs for ChatGPT"
  },
  "host": "apim-tutor7553.azure-api.net",
  "basePath": "/aoai",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    },
    "apiKeyQuery": {
      "type": "apiKey",
      "name": "subscription-key",
      "in": "query"
    }
  },
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "paths": {
    "/convert/voice": {
      "post": {
        "description": "This operation converts the voice input to text based on the given locale (`en-au` by default).",
        "operationId": "ConvertVoiceToTextAsync",
        "summary": "Voice to text",
        "tags": [
          "converter"
        ],
        "parameters": [
          {
            "name": "voiceToTextRequestModel",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/voiceToTextRequestModel"
            },
            "description": "The input file data"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "The output file data",
            "schema": {
              "$ref": "#/definitions/voiceToTextResponseModel"
            },
            "examples": {
              "application/json": {
                "outputData": "string"
              }
            }
          },
          "400": {
            "description": "Either request header or body is invalid",
            "schema": {
              "type": "string"
            },
            "examples": {
              "text/plain": ""
            }
          },
          "500": {
            "description": "Something went wrong",
            "schema": {
              "type": "string"
            },
            "examples": {
              "text/plain": ""
            }
          }
        }
      }
    },
    "/deployments": {
      "get": {
        "description": "Gets the list of deployments owned by the Azure OpenAI resource.",
        "operationId": "Deployments_List",
        "summary": "Gets the list of deployments owned by the Azure OpenAI resource.",
        "tags": [
          "Deployments:"
        ],
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeploymentList"
            }
          },
          "500": {
            "description": "An error occurred.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/deployments/{deployment-id}/completions": {
      "post": {
        "description": "Creates a completion for the provided prompt, parameters and chosen model.",
        "operationId": "Completions_Create",
        "summary": "Creates a completion for the provided prompt, parameters and chosen model.",
        "parameters": [
          {
            "name": "deployment-id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "deployments-deployment-id-CompletionsPostRequest-2",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "description": "The prompt(s) to generate completions for, encoded as a string or array of strings.\nNote that <|endoftext|> is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document. Maximum allowed size of string list is 2048.",
                  "allOf": [
                    {
                      "default": "",
                      "type": "string",
                      "example": "This is a test."
                    }
                  ]
                },
                "max_tokens": {
                  "description": "The token count of your prompt plus max_tokens cannot exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096). Has minimum of 0.",
                  "default": 16,
                  "type": "integer",
                  "example": 16
                },
                "temperature": {
                  "description": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.\nWe generally recommend altering this or top_p but not both.",
                  "default": 1,
                  "type": "number",
                  "example": 1
                },
                "top_p": {
                  "description": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\nWe generally recommend altering this or temperature but not both.",
                  "default": 1,
                  "type": "number",
                  "example": 1
                },
                "logit_bias": {
                  "description": "Defaults to null. Modify the likelihood of specified tokens appearing in the completion. Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this tokenizer tool (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. As an example, you can pass {\"50256\" &#58; -100} to prevent the <|endoftext|> token from being generated.",
                  "type": "object"
                },
                "user": {
                  "description": "A unique identifier representing your end-user, which can help monitoring and detecting abuse",
                  "type": "string"
                },
                "n": {
                  "description": "How many completions to generate for each prompt. Minimum of 1 and maximum of 128 allowed.\nNote: Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for max_tokens and stop.",
                  "default": 1,
                  "type": "integer",
                  "example": 1
                },
                "stream": {
                  "description": "Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message.",
                  "default": false,
                  "type": "boolean"
                },
                "model": {
                  "description": "ID of the model to use. You can use the Models_List operation to see all of your available models, or see our Models_Get overview for descriptions of them.",
                  "type": "string",
                  "example": "davinci"
                },
                "suffix": {
                  "description": "The suffix that comes after a completion of inserted text.",
                  "type": "string"
                },
                "stop": {
                  "description": "Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.",
                  "allOf": [
                    {
                      "default": "<|endoftext|>",
                      "type": "string",
                      "example": "\n"
                    }
                  ]
                },
                "completion_config": {
                  "type": "string"
                },
                "cache_level": {
                  "description": "can be used to disable any server-side caching, 0=no cache, 1=prompt prefix enabled, 2=full cache",
                  "type": "integer"
                },
                "presence_penalty": {
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
                  "default": 0,
                  "type": "number"
                },
                "frequency_penalty": {
                  "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                  "default": 0,
                  "type": "number"
                }
              },
              "example": {
                "prompt": "Negate the following sentence.The price for bubblegum increased on thursday.\n\n Negated Sentence:",
                "max_tokens": 50
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "apim-request-id": {
                "type": "string",
                "description": "Request ID for troubleshooting purposes"
              }
            },
            "schema": {
              "required": [
                "id",
                "object",
                "created",
                "model",
                "choices"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "object": {
                  "type": "string"
                },
                "created": {
                  "type": "integer"
                },
                "model": {
                  "type": "string"
                },
                "choices": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string"
                      },
                      "index": {
                        "type": "integer"
                      },
                      "logprobs": {
                        "type": "object",
                        "properties": {
                          "tokens": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "token_logprobs": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "top_logprobs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number"
                              }
                            }
                          },
                          "text_offset": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "finish_reason": {
                        "type": "string"
                      }
                    }
                  }
                },
                "usage": {
                  "required": [
                    "prompt_tokens",
                    "total_tokens",
                    "completion_tokens"
                  ],
                  "type": "object",
                  "properties": {
                    "completion_tokens": {
                      "format": "int32",
                      "type": "number"
                    },
                    "prompt_tokens": {
                      "format": "int32",
                      "type": "number"
                    },
                    "total_tokens": {
                      "format": "int32",
                      "type": "number"
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "model": "davinci",
                "object": "text_completion",
                "id": "cmpl-4509KAos68kxOqpE2uYGw81j6m7uo",
                "created": 1637097562,
                "choices": [
                  {
                    "index": 0,
                    "text": "The price for bubblegum decreased on thursday.",
                    "logprobs": "",
                    "finish_reason": "stop"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Service unavailable",
            "headers": {
              "apim-request-id": {
                "type": "string",
                "description": "Request ID for troubleshooting purposes"
              }
            },
            "schema": {
              "$ref": "#/definitions/errorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "param": "string",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Service unavailable",
            "headers": {
              "apim-request-id": {
                "type": "string",
                "description": "Request ID for troubleshooting purposes"
              }
            },
            "schema": {
              "$ref": "#/definitions/errorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "string",
                  "message": "string",
                  "param": "string",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Deployment": {
      "title": "Deployment",
      "description": "Deployments manage the reserved quota for Azure OpenAI models and make them available for inference requests.",
      "required": [
        "model",
        "scale_settings"
      ],
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/TypeDiscriminator"
        },
        "status": {
          "$ref": "#/definitions/State"
        },
        "created_at": {
          "format": "unixtime",
          "description": "A timestamp when this job or item was created (in unix epochs).",
          "type": "integer",
          "readOnly": true
        },
        "updated_at": {
          "format": "unixtime",
          "description": "A timestamp when this job or item was modified last (in unix epochs).",
          "type": "integer",
          "readOnly": true
        },
        "id": {
          "description": "The identity of this item.",
          "type": "string",
          "readOnly": true
        },
        "model": {
          "description": "The OpenAI model identifier (model-id) to deploy. Can be a base model or a fine tune.",
          "minLength": 1,
          "type": "string"
        },
        "owner": {
          "description": "The owner of this deployment. For Azure OpenAI only \"organization-owner\" is supported.",
          "type": "string",
          "readOnly": true
        },
        "scale_settings": {
          "$ref": "#/definitions/ScaleSettings"
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "DeploymentList": {
      "title": "DeploymentList",
      "description": "Represents a list of deployments.",
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/TypeDiscriminator"
        },
        "data": {
          "description": "The list of items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Deployment"
          }
        }
      }
    },
    "Error": {
      "title": "Error",
      "description": "Error content as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses).",
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode"
        },
        "message": {
          "description": "The message of this error.",
          "minLength": 1,
          "type": "string"
        },
        "target": {
          "description": "The location where the error happened if available.",
          "type": "string"
        },
        "details": {
          "description": "The error details if available.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "innererror": {
          "$ref": "#/definitions/InnerError"
        }
      }
    },
    "ErrorCode": {
      "title": "ErrorCode",
      "description": "Error codes as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses).",
      "enum": [
        "conflict",
        "invalidPayload",
        "forbidden",
        "notFound",
        "unexpectedEntityState",
        "itemDoesAlreadyExist",
        "serviceUnavailable",
        "internalFailure",
        "quotaExceeded",
        "jsonlValidationFailed",
        "fileImportFailed"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true,
        "values": [
          {
            "value": "conflict",
            "description": "The requested operation conflicts with the current resource state."
          },
          {
            "value": "invalidPayload",
            "description": "The request data is invalid for this operation."
          },
          {
            "value": "forbidden",
            "description": "The operation is forbidden for the current user/api key."
          },
          {
            "value": "notFound",
            "description": "The resource is not found."
          },
          {
            "value": "unexpectedEntityState",
            "description": "The operation cannot be executed in the current resource's state."
          },
          {
            "value": "itemDoesAlreadyExist",
            "description": "The item does already exist."
          },
          {
            "value": "serviceUnavailable",
            "description": "The service is currently not available."
          },
          {
            "value": "internalFailure",
            "description": "Internal error. Please retry."
          },
          {
            "value": "quotaExceeded",
            "description": "Quota exceeded."
          },
          {
            "value": "jsonlValidationFailed",
            "description": "Validation of jsonl data failed."
          },
          {
            "value": "fileImportFailed",
            "description": "Import of file failed."
          }
        ]
      }
    },
    "ErrorResponse": {
      "title": "ErrorResponse",
      "description": "Error response as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses).",
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "InnerError": {
      "title": "InnerError",
      "description": "Inner error as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses).",
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/InnerErrorCode"
        },
        "innererror": {
          "$ref": "#/definitions/InnerError"
        }
      }
    },
    "InnerErrorCode": {
      "title": "InnerErrorCode",
      "description": "Inner error codes as defined in the Microsoft REST guidelines\r\n(https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses).",
      "enum": [
        "invalidPayload"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true,
        "values": [
          {
            "value": "invalidPayload",
            "description": "The request data is invalid for this operation."
          }
        ]
      }
    },
    "ScaleSettings": {
      "title": "ScaleSettings",
      "description": "The scale settings of a deployment. It defines the modes for scaling and the reserved capacity.",
      "required": [
        "scale_type"
      ],
      "type": "object",
      "properties": {
        "scale_type": {
          "$ref": "#/definitions/ScaleType"
        }
      },
      "discriminator": "scale_type"
    },
    "ScaleType": {
      "title": "ScaleType",
      "description": "Defines how scaling operations will be executed.",
      "enum": [
        "manual",
        "standard"
      ],
      "type": "string",
      "x-ms-enum": {
        "name": "ScaleType",
        "modelAsString": true,
        "values": [
          {
            "value": "manual",
            "description": "Scaling of a deployment will happen by manually specifying the capacity of a model."
          },
          {
            "value": "standard",
            "description": "Scaling of a deployment will happen automatically based on usage."
          }
        ]
      }
    },
    "State": {
      "title": "State",
      "description": "The state of a job or item.",
      "enum": [
        "notRunning",
        "running",
        "succeeded",
        "canceled",
        "failed",
        "deleted"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
        "name": "State",
        "modelAsString": true,
        "values": [
          {
            "value": "notRunning",
            "description": "The operation was created and is not queued to be processed in the future."
          },
          {
            "value": "running",
            "description": "The operation has started to be processed."
          },
          {
            "value": "succeeded",
            "description": "The operation has successfully be processed and is ready for consumption."
          },
          {
            "value": "canceled",
            "description": "The operation has been canceled and is incomplete."
          },
          {
            "value": "failed",
            "description": "The operation has completed processing with a failure and cannot be further consumed."
          },
          {
            "value": "deleted",
            "description": "The entity has been deleted but may still be referenced by other entities predating the deletion."
          }
        ]
      }
    },
    "TypeDiscriminator": {
      "title": "TypeDiscriminator",
      "description": "Defines the type of an object.",
      "enum": [
        "list",
        "fine-tune",
        "file",
        "fine-tune-event",
        "model",
        "deployment"
      ],
      "type": "string",
      "readOnly": true,
      "x-ms-enum": {
        "name": "TypeDiscriminator",
        "modelAsString": true,
        "values": [
          {
            "value": "list",
            "description": "This object represents a list of other objects."
          },
          {
            "value": "fine-tune",
            "description": "This object represents a fine tune job."
          },
          {
            "value": "file",
            "description": "This object represents a file."
          },
          {
            "value": "fine-tune-event",
            "description": "This object represents an event of a fine tune job."
          },
          {
            "value": "model",
            "description": "This object represents a model (can be a base models or fine tune job result)."
          },
          {
            "value": "deployment",
            "description": "This object represents a deployment."
          }
        ]
      }
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "param": {
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        }
      }
    },
    "voiceToTextRequestModel": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        },
        "input": {
          "type": "string"
        },
        "inputData": {
          "type": "string"
        }
      },
      "example": {
        "locale": "string",
        "input": "string",
        "inputData": "string"
      }
    },
    "voiceToTextResponseModel": {
      "type": "object",
      "properties": {
        "outputData": {
          "type": "string"
        }
      }
    }
  },
  "tags": []
}